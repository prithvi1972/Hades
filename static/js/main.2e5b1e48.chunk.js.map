{"version":3,"sources":["components/sideNavigation/utils.js","components/sideNavigation/index.js","pages/home/sections/introSection/index.mjs","components/cards/productCard/index.js","pages/home/sections/filmSection/index.mjs","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["toggleSideNav","sideNav","document","getElementById","overlay","classList","toggle","style","display","indexOf","body","overflow","SideNavigation","react_default","a","createElement","Fragment","id","onClick","className","IntroSection","react","ProductCard","_ref","_ref$rowSpan","rowSpan","_ref$title","title","_ref$subTitle","subTitle","_ref$image","image","src","alt","cards","FilmSection","map","productCard","Home","introSection","filmSection","App","sideNavigation","home","Boolean","window","location","hostname","match","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e5b1e48.chunk.js","sourcesContent":["export function toggleSideNav() {\n\tconst sideNav = document.getElementById('sidenav'),\n\t\toverlay = document.getElementById('sidenav-overlay');\n\tsideNav.classList.toggle('sidenav-show');\n\toverlay.style.display = ['none', ''].indexOf(overlay.style.display) !== -1 ? 'block' : 'none';\n\tdocument.body.style.overflow = document.body.style.overflow === 'hidden' ? 'scroll' : 'hidden';\n}\n","import React from 'react';\nimport './style.css';\nimport {toggleSideNav} from \"./utils\";\n\nfunction SideNavigation() {\n\treturn (\n\t\t<>\n\t\t\t<div id={'sidenav-overlay'} onClick={toggleSideNav} />\n\t\t\t<nav className={'sidenav'} id={'sidenav'}>\n\t\t\t\t<div className={'logo'}>logo</div>\n\t\t\t\t<div className={'navItem'}>Item 1</div>\n\t\t\t\t<div className={'navItem'}>Item 1</div>\n\t\t\t\t<div className={'navItem'}>Item 1</div>\n\t\t\t</nav>\n\t\t</>\n\t);\n}\nexport default SideNavigation;\n","import React from 'react';\nimport './style.css';\n\nfunction IntroSection() {\n\treturn (\n\t\t<section className={'introSection'}>\n\t\t\t<div className={'introContent'}>\n\t\t\t\t<div className={'mainHead'}>Prithvi Anand</div>\n\t\t\t\t<div className={'typewriter'}>\n\t\t\t\t\t<h1>Student | UI/UX Developer | Freelancer</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={'scrollDown'}>\n\t\t\t\t<i className={'downArr'}/>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nexport default IntroSection;\n","import React from 'react';\nimport './style.css';\n\nfunction ProductCard({ rowSpan = 1, title = '', subTitle = '', image = '', onClick }) {\n\treturn (\n\t\t<div className={rowSpan === 2 ? 'card card-2x' : 'card'} onClick={onClick}>\n\t\t\t<img className={'card-bck'} src={image} alt={title} />\n\t\t\t<div className={'overlay'}>\n\t\t\t\t<i className=\"card-play fab fa-youtube\" />\n\t\t\t\t<h2 className={'title'}>{title}</h2>\n\t\t\t\t<h3 className={'sub-title'}>{subTitle}</h3>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ProductCard;\n","import React from 'react';\nimport './style.css';\nimport ProductCard from '../../../../components/cards/productCard';\n\nconst cards = [\n\t{title: 'esdrft', subTitle: 'ubhj ygbhn ybhujnk vgbh', image:'/img/intro-bck.jpeg'},\n\t{title: 'esdrft', subTitle: 'ubhj ygbhn ybhujnk vgbh', image:'/img/intro-bck.jpeg'},\n\t{title: 'esdrft', subTitle: 'ubhj ygbhn ybhujnk vgbh', image:'/img/intro-bck.jpeg'},\n\t{title: 'esdrft', subTitle: 'ubhj ygbhn ybhujnk vgbh', image:'/img/intro-bck.jpeg'},\n];\n\nfunction FilmSection() {\n\treturn (\n\t\t<section className={'filmsSection'}>\n\t\t\t<h2 className={'filmsHead'}>Films</h2>\n\t\t\t<div className={'cardsWrapper'}>\n\t\t\t\t{cards.map(({ title, subTitle, image, onClick }) => (\n\t\t\t\t\t<ProductCard\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tsubTitle={subTitle}\n\t\t\t\t\t\timage={image}\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nexport default FilmSection;\n","import React from 'react';\nimport IntroSection from './sections/introSection';\nimport FilmSection from './sections/filmSection';\n\nfunction Home() {\n\treturn (\n\t\t<>\n\t\t\t<IntroSection />\n\t\t\t<FilmSection />\n\t\t</>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\nimport SideNavigation from './components/sideNavigation';\n// import Header from './components/header';\n// import Footer from './components/footer';\nimport Home from './pages/home';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<SideNavigation />\n\t\t\t{/*<Header />*/}\n\t\t\t<Home />\n\t\t\t{/*<Footer />*/}\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}